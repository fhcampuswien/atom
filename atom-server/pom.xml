<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>at.ac.fhcampuswien.atom</groupId>
		<artifactId>atom</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>atom-server</artifactId>
	<packaging>war</packaging>

	<prerequisites>
		<maven>${mavenVersion}</maven>
	</prerequisites>

	<dependencies>
		<!-- shared code analyzer depends on domain depends on core, so all will be imported through 
			analyzer -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>atom-analyzer</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- client side code after java-to-javascript compilation
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>atom-client</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>  --><!-- only required for deployment
			<type>war</type>  --><!-- packaged as war, since a jar file would be put into lib instead of extracted
		</dependency> -->

		<!-- GWT RPC framework -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- basic servlet classes that are provided by tomcat / putty application-server -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope> <!-- already exist on any java application server -->
			<version>2.5</version>
		</dependency>

		<!-- using Hibernate c3p0 connection pool, because default is not suited 
			for production -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- https://github.com/bonigarcia/webdrivermanager/issues/76 -->
		<dependency>
		    <groupId>xml-apis</groupId>
		    <artifactId>xml-apis</artifactId>
		    <version>1.4.01</version>
		</dependency>
		
		<!-- used by at.ac.fhcampuswien.atom.server.UploadImportServlet -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		
		<!-- <dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.2</version>
		</dependency> -->

		<!-- used by at.ac.fhcampuswien.atom.server.PoolableEntityManagerFactory -->
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>

		<!-- fÃ¼r den Zugriff auf das Campus Authentifizierungs-Webservice verwendet 
			von at.ac.fhcampuswien.atom.server.AtomServiceImpl -->
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<!-- Datenbankzugriff Microsoft SQL -->
		<dependency>
			<groupId>com.microsoft.sqlserver.jdbc</groupId>
			<artifactId>sqljdbc4</artifactId>
			<version>[2.0,)</version>
			<!-- <version>3.0</version> -->
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.7</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.27.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.opera</groupId>
			<artifactId>operadriver</artifactId>
			<version>0.16.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<version>4.7</version> <scope>test</scope> </dependency> -->

	</dependencies>

	<!-- scm -> git connection - so that buildnumber plugin will work -->
	<scm>
		<connection>scm:git:git://github.com/fhcampuswien/atom.git</connection>
		<url>https://github.com/fhcampuswien/atom</url>
	</scm>

	<build>

		<plugins>

			<plugin>
				<groupId>com.edugility</groupId>
				<artifactId>jpa-maven-plugin</artifactId>
				<version>3-SNAPSHOT</version>
				<executions>
					<execution>
						<id>Generate entityClassnames.properties</id>
						<phase>process-classes</phase>
						<goals>
							<goal>list-entity-classnames</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.directory}/generated-sources/${file.separator}</outputFile>
							<encoding>UTF-8</encoding>
							<urls>
								<url>file://${basedir}/../atom-core/target/classes/</url>
								<url>file://${basedir}/../atom-domain/target/classes/</url>
								<url>file://${basedir}/target/classes/</url>
							</urls>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>Copy persistence.xml filtered with generated entityClassnames.properties file</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<filters>
								<filter>${project.build.directory}/generated-sources/entityClassnames.properties</filter>
							</filters>
							<outputDirectory>${basedir}/src/main/resources/META-INF</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/main/templates</directory>
									<includes>
										<include>persistence.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- the default "copy resources" mechanism seems to run earlier than 
						the "process-classes" phase but we can't do our persistence.xml filtering 
						any earlier than that because the generation of entityClassnames.properties 
						requires classes generated by this (the atom-server) project and those are 
						only available in the "process-classes" phase or later.
						
						therefore we manually copy our filtered persistence.xml file into target -->
					<execution>
						<id>Copy persistence.xml file to target1</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/classes/META-INF/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/META-INF</directory>
									<includes>
										<include>persistence.xml</include>
									</includes>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
					<execution>
						<id>Copy persistence.xml file to target2</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.OutputDirectory}/META-INF</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/META-INF</directory>
									<includes>
										<include>persistence.xml</include>
									</includes>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
					<execution>
						<id>create version.txt</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/webapp/</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>src/main/resources/</directory>
									<includes>
										<include>version.txt</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- get build time as property into ${buildNumber} for use in war-file-name -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>generate-buildnumber</id>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<!-- warning, doUpdate might be a problem, since it fetches all updates 
								from the svn-server and incoperates them into the working copy. But its the 
								only way I found to get the true last revision number (for using it in the 
								build name) -->
							<detail>true</detail>
							<doUpdate>false</doUpdate>
							<doCheck>false</doCheck>
							<shortRevisionLength>7</shortRevisionLength>
							<buildNumberPropertyName>buildNumber</buildNumberPropertyName>
						</configuration>
					</execution>
					<execution>
						<id>generate-timestamp</id>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<format>{0,date,yyyy-MM-dd_HHmm-ss}</format>
							<revisionOnScmFailure>fetchDateFailed</revisionOnScmFailure>
							<items>
								<item>timestamp</item>
							</items>
							<buildNumberPropertyName>buildDateTime</buildNumberPropertyName>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- renaming I@H into IatH because of this bug: -->
			<!-- https://github.com/gwtproject/gwt/issues/9142 -->
			<!-- copied from: http://stackoverflow.com/questions/12002033/in-maven-how-can-i-dynamically-build-a-property-value-at-runtime -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>regex-property</id>
						<phase>package</phase>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>branchAtReplaced</name>
							<value>${scmBranch}</value>
							<regex>^([0-9a-zA-Z]*)@([0-9a-zA-Z]*)$</regex>
							<replacement>$1at$2</replacement>
							<failIfNoMatch>false</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<!-- Managed version 1.3 doesn't provide the functionality we require 
					below, suppressing warning with no-man-ver -->
				<version>1.5</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<target>
						<!-- <rename src="ATOM-SNAPSHOT_.war" dest="ATOM-SNAPSHOT_x_${buildNumber}.war"/> -->
						<echo message="buildNumber='${buildNumber}'" />
						<move file="${project.build.directory}/${project.build.finalName}.war"
							tofile="${project.build.directory}/ATOM_${branchAtReplaced}_build_${buildDateTime}_${buildNumber}.war" />
					</target>
				</configuration>

			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<configuration>
						<skip>false</skip>
						<scanIntervalSeconds>1</scanIntervalSeconds>
						<webApp>
							<extraClasspath>${basedir}/../atom-core/target/classes/</extraClasspath>
						</webApp>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<configuration>
						<addWarDependenciesInClassloader>false</addWarDependenciesInClassloader>
						<path>/</path>
						<uriEncoding>UTF-8</uriEncoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- XXX: We want to exclude atom-client from 'env-dev' profile, Maven 
				forces us to make a 'env-prod' profile -->
			<id>env-prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>atom-client</artifactId>
					<version>${project.version}</version>
					<type>war</type>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>env-dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.jetty</groupId>
							<artifactId>jetty-maven-plugin</artifactId>
							<configuration>
								<scanIntervalSeconds>1</scanIntervalSeconds>
								<webApp>
									<baseResource
										implementation="org.eclipse.jetty.util.resource.ResourceCollection">
										<resourcesAsCSV>src/main/webapp,${basedir}/../target/gwt/launcherDir/</resourcesAsCSV>
									</baseResource>
									<extraClasspath>${basedir}/../atom-shared/target/classes/</extraClasspath>
								</webApp>
								<systemProperties>
									<systemProperty>
										<name>gwt.codeserver.port</name>
										<value>9876</value>
									</systemProperty>
								</systemProperties>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.tomcat.maven</groupId>
							<artifactId>tomcat6-maven-plugin</artifactId>
							<configuration>
								<addWarDependenciesInClassloader>false</addWarDependenciesInClassloader>
								<contextFile>${basedir}/src/main/tomcatconf/context.xml</contextFile>
								<path>/</path>
								<port>8880</port>
								<httpsPort>8843</httpsPort>
								<uriEncoding>UTF-8</uriEncoding>
								<systemProperties>
									<gwt.codeserver.port>9876</gwt.codeserver.port>
								</systemProperties>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.tomcat.maven</groupId>
							<artifactId>tomcat7-maven-plugin</artifactId>
							<configuration>
								<addWarDependenciesInClassloader>false</addWarDependenciesInClassloader>
								<contextFile>${basedir}/src/main/tomcatconf/context.xml</contextFile>
								<path>/</path>
								<port>8880</port>
								<httpsPort>8843</httpsPort>
								<uriEncoding>UTF-8</uriEncoding>
								<systemProperties>
									<gwt.codeserver.port>9876</gwt.codeserver.port>
								</systemProperties>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
